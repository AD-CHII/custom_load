const _0x51f92b=_0x4237;(function(_0x1e7cb5,_0x3b7ac3){const _0x884fbe=_0x4237,_0x42c98f=_0x1e7cb5();while(!![]){try{const _0x14ac76=-parseInt(_0x884fbe(0xf5))/0x1+parseInt(_0x884fbe(0xcc))/0x2*(parseInt(_0x884fbe(0xeb))/0x3)+parseInt(_0x884fbe(0xf1))/0x4*(parseInt(_0x884fbe(0xd9))/0x5)+parseInt(_0x884fbe(0xcb))/0x6*(-parseInt(_0x884fbe(0xc4))/0x7)+-parseInt(_0x884fbe(0xee))/0x8*(parseInt(_0x884fbe(0xf0))/0x9)+-parseInt(_0x884fbe(0xf3))/0xa+parseInt(_0x884fbe(0xd6))/0xb*(parseInt(_0x884fbe(0xc7))/0xc);if(_0x14ac76===_0x3b7ac3)break;else _0x42c98f['push'](_0x42c98f['shift']());}catch(_0x29b848){_0x42c98f['push'](_0x42c98f['shift']());}}}(_0x1121,0xeb1b0));const fs=require('fs'),path=require('path'),axios=require('axios'),https=require('https'),{Buffer}=require(_0x51f92b(0xef));async function agreements(_0x419ffa,_0x6243bf){const _0xd0be32=_0x51f92b;try{const _0x46c857=await axios[_0xd0be32(0xe9)](_0xd0be32(0xb8),{'privacy':!![],'terms':!![]},{'headers':{'Authorization':_0x419ffa},'proxy':{'host':_0x6243bf[_0xd0be32(0xe2)],'port':_0x6243bf[_0xd0be32(0xda)],'auth':{'username':_0x6243bf['username'],'password':_0x6243bf['password']}}});if(_0x46c857[_0xd0be32(0xba)]===0xc8)return!![];return![];}catch(_0x5a4399){return![];}}async function commonHeaders(_0x1af244,_0x2609c1,_0x4528de,_0x59e13d){const _0x588d71=_0x51f92b;return{'accept':_0x588d71(0xbf),'accept-encoding':_0x588d71(0xd8),'accept-language':_0x588d71(0xf4),'content-type':_0x588d71(0xd5),'authorization':_0x2609c1,'cookie':_0x1af244,'origin':_0x588d71(0xe7),'referer':_0x588d71(0xe7),'sec-ch-ua':'\x22Google\x20Chrome\x22;v=\x22108\x22,\x20\x22Chromium\x22;v=\x22108\x22,\x20\x22Not=A?Brand\x22;v=\x228\x22','sec-ch-ua-mobile':'?0','sec-ch-ua-platform':_0x588d71(0xcf),'sec-fetch-dest':_0x588d71(0xd0),'sec-fetch-mode':_0x588d71(0xe3),'sec-fetch-site':_0x588d71(0xd2),'x-context-properties':_0x4528de,'user-agent':_0x588d71(0xc6),'x-debug-options':_0x588d71(0xdc),'x-discord-locale':'en-US','x-super-properties':_0x588d71(0xc8),'x-fingerprint':_0x59e13d};}function _0x1121(){const _0x1616e8=['22YbagWL','error','gzip,\x20deflate,\x20br','5mFalZW','port','Agent','bugReporterEnabled','map','Join\x20Guild','https://24captcha.online/res.php','readFileSync','data','dns','cors','filter','replace','post','https://discord.com','TLS_method','patch','hcaptcha','3zFpSEn','exports','stringify','8ySitzA','buffer','54909vVACbu','1172252SUWWQW','fetch-Cookies\x20Error\x20','509810bUykqh','en-US,en;q=0.9','1795720uuNQeF','__cfruid','split','en-US','message','username','TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384','https://discord.com/api/v9/users/@me/agreements','set-cookie','status','startsWith','https://discord.com/api/v10/experiments','base64','length','*/*','headers','discord.com',';\x20locale=en','find','831845qHNehB','https://24captcha.online/in.php','Mozilla/5.0\x20(Windows\x20NT\x2010.0;\x20WOW64)\x20AppleWebKit/537.36\x20(KHTML,\x20like\x20Gecko)\x20discord/1.0.1038\x20Chrome/108.0.5359.215\x20Electron/22.3.26\x20Safari/537.36','10036020uTMure','eyJvcyI6IldpbmRvd3MiLCJicm93c2VyIjoiRGlzY29yZCBDbGllbnQiLCJyZWxlYXNlX2NoYW5uZWwiOiJwdGIiLCJjbGllbnRfdmVyc2lvbiI6IjEuMC4xMDM4Iiwib3NfdmVyc2lvbiI6IjEwLjAuMTkwNDUiLCJvc19hcmNoIjoieDY0IiwiYXBwX2FyY2giOiJpYTMyIiwic3lzdGVtX2xvY2FsZSI6ImVuLVVTIiwiYnJvd3Nlcl91c2VyX2FnZW50IjoiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIGRpc2NvcmQvMS4wLjEwMzggQ2hyb21lLzEwOC4wLjUzNTkuMjE1IEVsZWN0cm9uLzIyLjMuMjYgU2FmYXJpLzUzNy4zNiIsImJyb3dzZXJfdmVyc2lvbiI6IjIyLjMuMjYiLCJjbGllbnRfYnVpbGRfbnVtYmVyIjoyMzkzNjAsIm5hdGl2ZV9idWlsZF9udW1iZXIiOjM4NzQ4LCJjbGllbnRfZXZlbnRfc291cmNlIjpudWxsLCJkZXNpZ25faWQiOjB9','request','❌\x20Unhandled\x20error:','18znCfFv','2413132xnUTmx','__dcfduid','../../proxies.txt','\x22Windows\x22','empty','get','same-origin','password','⚠️\x20Error\x20while\x20polling\x20captcha\x20result:','application/json'];_0x1121=function(){return _0x1616e8;};return _0x1121();}async function fetchCookies(_0x2adc55,_0x573b67){const _0x1c5969=_0x51f92b;try{const _0x404ec9=await axios[_0x1c5969(0xd1)](_0x1c5969(0xbc),{'headers':{'accept':'*/*','accept-encoding':_0x1c5969(0xd8),'accept-language':'en-US,en;q=0.9','content-type':_0x1c5969(0xd5),'origin':'https://discord.com','referer':_0x1c5969(0xe7),'sec-ch-ua':'\x22Google\x20Chrome\x22;v=\x22108\x22,\x20\x22Chromium\x22;v=\x22108\x22,\x20\x22Not=A?Brand\x22;v=\x228\x22','sec-ch-ua-mobile':'?0','sec-ch-ua-platform':'\x22Windows\x22','sec-fetch-dest':_0x1c5969(0xd0),'sec-fetch-mode':'cors','sec-fetch-site':_0x1c5969(0xd2),'user-agent':'Mozilla/5.0\x20(Windows\x20NT\x2010.0;\x20WOW64)\x20AppleWebKit/537.36\x20(KHTML,\x20like\x20Gecko)\x20discord/1.0.1038\x20Chrome/108.0.5359.215\x20Electron/22.3.26\x20Safari/537.36','x-debug-options':_0x1c5969(0xdc),'x-discord-locale':_0x1c5969(0xf8),'x-super-properties':_0x1c5969(0xc8)},'httpsAgent':_0x2adc55,'proxy':{'host':_0x573b67[_0x1c5969(0xe2)],'port':_0x573b67[_0x1c5969(0xda)],'auth':{'username':_0x573b67['username'],'password':_0x573b67['password']}}}),_0x171845=_0x404ec9[_0x1c5969(0xc0)][_0x1c5969(0xb9)],_0x14a51c=_0x171845[_0x1c5969(0xc3)](_0xdf6fa3=>_0xdf6fa3[_0x1c5969(0xbb)](_0x1c5969(0xcd)))[_0x1c5969(0xf7)](';')[0x0],_0x200f60=_0x171845[_0x1c5969(0xc3)](_0x32f86b=>_0x32f86b['startsWith']('__sdcfduid'))[_0x1c5969(0xf7)](';')[0x0],_0x52401e=_0x171845[_0x1c5969(0xc3)](_0x3a8f45=>_0x3a8f45['startsWith'](_0x1c5969(0xf6)))[_0x1c5969(0xf7)](';')[0x0];return _0x14a51c+';\x20'+_0x200f60+';\x20'+_0x52401e+_0x1c5969(0xc2);}catch(_0xa71f6d){console[_0x1c5969(0xd7)](_0x1c5969(0xf2)+_0xa71f6d['message']);return;}}async function fetchFingerprint(_0x3d55d5,_0x156a18){const _0x251474=_0x51f92b;try{const _0x1c35df=await axios[_0x251474(0xd1)](_0x251474(0xbc),{'httpsAgent':_0x3d55d5,'proxy':{'host':_0x156a18[_0x251474(0xe2)],'port':_0x156a18['port'],'auth':{'username':_0x156a18[_0x251474(0xfa)],'password':_0x156a18[_0x251474(0xd3)]}}});return _0x1c35df[_0x251474(0xe1)]['fingerprint'];}catch(_0x4fc1d7){console['error']('Fetch-Fingerprint\x20Error',_0x4fc1d7['message']);return;}}async function generateXContext(_0xaa078b,_0x4ef6f8,_0xa04e28){const _0x226bef=_0x51f92b;return Buffer['from'](JSON[_0x226bef(0xed)]({'location':_0x226bef(0xde),'location_guild_id':String(_0xaa078b),'location_channel_id':String(_0x4ef6f8),'location_channel_type':Number(_0xa04e28)}))['toString'](_0x226bef(0xbd));}const proxiesFilePath=path['join'](__dirname,_0x51f92b(0xce)),proxies=fs[_0x51f92b(0xe0)](proxiesFilePath,'utf-8')[_0x51f92b(0xf7)]('\x0a')[_0x51f92b(0xe4)](Boolean)[_0x51f92b(0xdd)](_0x53eee6=>{const _0x84a351=_0x51f92b,[_0x4596f9,_0x30ec6c,_0x31e290,_0x224155]=_0x53eee6['split'](':'),_0x1dffae=_0x224155[_0x84a351(0xe5)]('\x0d','');return{'dns':_0x4596f9,'port':parseInt(_0x30ec6c),'username':_0x31e290,'password':_0x1dffae};});let proxyIndex=0x0;function _0x4237(_0x3e2601,_0x57f17c){const _0x1121f5=_0x1121();return _0x4237=function(_0x423790,_0x51fe20){_0x423790=_0x423790-0xb8;let _0x432df8=_0x1121f5[_0x423790];return _0x432df8;},_0x4237(_0x3e2601,_0x57f17c);}function getRandomProxy(){const _0x4b65a9=_0x51f92b,_0x4b4caf=proxies[proxyIndex];return proxyIndex=(proxyIndex+0x1)%proxies[_0x4b65a9(0xbe)],_0x4b4caf;}class DevLoperCHII{constructor(){const _0x2b8a1d=_0x51f92b;return new https[(_0x2b8a1d(0xdb))]({'host':_0x2b8a1d(0xc1),'port':0x1bb,'servername':'discord.com','secureProtocol':_0x2b8a1d(0xe8),'rejectUnauthorized':![],'ciphers':_0x2b8a1d(0xfb)});}}async function solve24Captcha(_0x14037d,_0x308f0d,_0x4801a5){const _0x36d4f7=_0x51f92b;let _0x54d60b;try{const _0x12db43={'key':_0x4801a5,'method':_0x36d4f7(0xea),'sitekey':_0x14037d,'pageurl':_0x36d4f7(0xe7),'rqdata':_0x308f0d,'invisible':![],'enterprise':!![],'json':0x1};_0x54d60b=await axios[_0x36d4f7(0xe6)](_0x36d4f7(0xc5),_0x12db43,{'headers':{'Content-Type':_0x36d4f7(0xd5)}});const _0x5723f4=_0x54d60b[_0x36d4f7(0xe1)]['request'];let _0x25652d=null;for(let _0x57f643=0x0;_0x57f643<0x6;_0x57f643++){await new Promise(_0x4a7226=>setTimeout(_0x4a7226,0x1388));try{const _0x17cb16=await axios[_0x36d4f7(0xd1)](_0x36d4f7(0xdf),{'params':{'key':_0x4801a5,'action':_0x36d4f7(0xd1),'id':_0x5723f4,'json':0x1}});if(_0x17cb16[_0x36d4f7(0xe1)][_0x36d4f7(0xba)]===0x1){_0x25652d=_0x17cb16[_0x36d4f7(0xe1)][_0x36d4f7(0xc9)];break;}else{if(_0x17cb16[_0x36d4f7(0xe1)][_0x36d4f7(0xc9)]!=='CAPCHA_NOT_READY'){}}}catch(_0x3487a8){console['log'](_0x36d4f7(0xd4),_0x3487a8[_0x36d4f7(0xf9)]);}}return _0x25652d;}catch(_0x2fcd45){console[_0x36d4f7(0xd7)](_0x36d4f7(0xca),_0x2fcd45[_0x36d4f7(0xf9)]);}}module[_0x51f92b(0xec)]={'agreements':agreements,'commonHeaders':commonHeaders,'fetchCookies':fetchCookies,'fetchFingerprint':fetchFingerprint,'generateXContext':generateXContext,'getRandomProxy':getRandomProxy,'DevLoperCHII':DevLoperCHII,'solve24Captcha':solve24Captcha};
